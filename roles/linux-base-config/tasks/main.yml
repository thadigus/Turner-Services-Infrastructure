#############################################
## /roles/linux-base-config/tasks/main.yml ##
#############################################
#
# Role for all Linux base configuration.

---
- name: Set hostname of Ubuntu to ansible_hostname
  hostname:
    name: "{{ ansible_hostname }}"

- name: Create turneradmin user
  user:
    name: turneradmin
    state: present
    generate_ssh_key: no
    ssh_key_bits: 2048
    home: /home/turneradmin
    append: true
    groups: sudo
    shell: /bin/bash

- name: Create .ssh folder for turneradmin account user
  file:
    path: /home/turneradmin/.ssh/
    state: directory
    owner: turneradmin
    group: turneradmin
    mode: '0700'

- name: Deploy Public Key to authorized_keys File
  copy:
    src: turneradmin_id_rsa.pub
    dest: /home/turneradmin/.ssh/authorized_keys
    owner: turneradmin
    group: turneradmin
    mode: '0600'

- name: Grant turneradmin Sudo Permissions
  lineinfile:
    path: /etc/sudoers
    state: present
    line: 'turneradmin ALL=(ALL) ALL'
    validate: 'visudo -cf %s'

- name: Ensure libpam-ssh-agent-auth is installed
  apt:
    name: libpam-ssh-agent-auth
    state: present
    update_cache: true

- name: Ensure /etc/security exists
  file:
    path: /etc/security
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Fetch GitHub public keys for Thadigus
  uri:
    url: "https://github.com/thadigus.keys"
    return_content: true
    status_code: 200
  register: gh_keys

- name: Install /etc/security/authorized_keys with GitHub keys
  copy:
    dest: /etc/security/authorized_keys
    content: "{{ gh_keys.content }}\n"
    owner: root
    group: root
    mode: "0640"
    backup: true

- name: Install /home/turneradmin/.ssh/authorized_keys with GitHub keys
  blockinfile:
    path: /home/turneradmin/.ssh/authorized_keys
    block: "{{ gh_keys.content }}\n"
    owner: turneradmin
    group: turneradmin
    mode: "0640"

- name: Ensure pam_ssh_agent_auth line exists in /etc/pam.d/sudo (after header)
  lineinfile:
    path: /etc/pam.d/sudo
    insertafter: '^#%PAM-1\.0'
    line: 'auth sufficient pam_ssh_agent_auth.so file=/etc/security/authorized_keys'
    state: present
    backup: true

- name: Ensure sudoers keeps SSH_AUTH_SOCK (validated with visudo)
  lineinfile:
    path: /etc/sudoers
    line: 'Defaults env_keep += SSH_AUTH_SOCK'
    state: present
    create: false
    validate: 'visudo -cf %s'
    backup: true

- name: Remove Root User Password
  user:
    name: root
    password: '!'
    generate_ssh_key: no
    password_lock: true
    state: present

- name: Disable Root Login
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: "PermitRootLogin no"
    state: present

- name: Restart SSH
  service:
    name: sshd
    state: restarted
  when: ansible_facts['os_family'] == "RedHat"

- name: Restart SSH
  service:
    name: ssh
    state: restarted
  when: ansible_facts['os_family'] == "Ubuntu"
    
- name: Crontab for automatic updates and reboot @ 4 AM
  cron:
    name: "Patch and Reboot"
    minute: "0"
    hour: "4"
    job: "apt update; apt full-upgrade -y; apt autoremove -y; systemctl reboot"

- name: Read device information (always use unit when probing)
  parted: device=/dev/sda unit=MiB
  register: sda_info
  when: lv_expand_list is defined

- name: Expand Parition to Consume All Space
  parted:
    device: /dev/sda
    number: "{{ sda_info.partitions | length }}"
    part_end: "100%"
    resize: true
    label: "gpt"
    state: present
  when: lv_expand_list is defined

- name: Expand vgroot to New Partition Size
  lvg:
    vg: vgroot
    pvs: /dev/sda3
    pvresize: true
  when: lv_expand_list is defined
  register: resize_disk
    
- name: Increase Logical Volume Sizes
  lvol:
    vg: vgroot
    lv: "{{ item.key }}"
    size: "+{{ item.value }}"
  loop: "{{ lv_expand_list | dict2items }}"
  when: 
    - lv_expand_list is defined
    - resize_disk is changed

- name: Resize File System Block Devices
  shell: "resize2fs /dev/vgroot/{{ item.key }}"
  loop: "{{ lv_expand_list | dict2items }}"
  when: 
    - lv_expand_list is defined
    - resize_disk is changed